import java.util.Scanner;

public class SuZhao {

	static int a;
	static int ys;
	double[] value;
	double[][] zl;
	int[] sx;
	double[] dq_zl = new double[ys];

	double dq_value=0;
	double max_value=0;
	int[] best_flag;
	int[] flag;
	public SuZhao(double value[],double zl[][],int sx[]) {
		this.value = value;
		this.zl=zl;
		this.sx=sx;
		best_flag = new int[a];
		flag=new int[a];
	}
	private boolean ok(double[] dq_zl,int ys,int[] sx,int t,double[][] zl){
		int i;
		for(i=0;i<ys;i++){
			if(dq_zl[i]+zl[i][t]<sx[i])
				continue;
			else break;
		}
		if(i==ys)
			return true;
		else 
			return false;
	}
	private void backtrack(int t) {
		if (t >= a) {
			if (dq_value > max_value) {
				max_value = dq_value;
				for (int i = 0; i < a; i++) {
					best_flag[i] = flag[i]; 
					// System.out.print(flag[i] + " ");
				}
			}
		}

		else {
			// 搜索左子树
			if (ok(dq_zl,ys,sx,t,zl)) {
				for(int i=0;i<ys;i++){
				dq_zl[i] += zl[i][t];}
				dq_value += value[t];

				flag[t] = 1;
				backtrack(t + 1);

				// 背包当前价值和重量还原，遍历右子树
				for(int i=0;i<ys;i++){
					dq_zl[i] -= zl[i][t];}
				//c_weight -= weight[t];
				dq_value -= value[t];
			}

			flag[t] = 0;
			backtrack(t + 1); // 搜索右子树

		}
	}


	public static void main(String args[]) {
		Scanner sc = new Scanner(System.in);
		a = sc.nextInt();// 表示物体的个数
	    ys = sc.nextInt();//物品约束条件
	    double maxValue = sc.nextDouble();
	    
	    double[] value = new double[a];
	    for(int i = 0; i < a; i++) {        //物品价值
	    	value[i] = sc.nextDouble();
	    }
	    
	    double[][] zl =  new double[ys][a];
	    for(int i = 0; i < ys; i++) {            //物品重量
	    	for(int j=0;j < a;j++) {
	    		zl[i][j] = sc.nextDouble();
	    	}
	    }
	    int[] sx = new int[ys];//约束条件
	    for(int j = 0; j < ys; j++) {            //物品约束条件
	    	sx[j] = sc.nextInt();
        }
		
		
		
		
	    SuZhao b= new SuZhao(value,zl,sx);
		b.backtrack(0);
		System.out.println("最优值为：" + b.max_value);
		System.out.println("最优选取方案为：");
		for (int i = 0; i < a; i++) {
			if (b.best_flag[i] == 1)
				System.out.print(i+1+ " ");
		}
	}
}
